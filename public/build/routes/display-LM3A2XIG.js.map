{
  "version": 3,
  "sources": ["../../../app/routes/display/index.jsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/display/index.jsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/display/index.jsx\");\n  import.meta.hot.lastModified = \"1715962480313.705\";\n}\n// REMIX HMR END\n\n// app/routes/display/index.jsx\n\nimport { useLoaderData, Form } from \"@remix-run/react\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { PrismaClient } from \"@prisma/client\";\nconst prisma = new PrismaClient();\nexport const loader = async () => {\n  const clients = await prisma.client.findMany();\n  return json(clients);\n};\nexport const action = async ({\n  request\n}) => {\n  const formData = await request.formData();\n  const actionType = formData.get(\"actionType\");\n  const clientId = formData.get(\"clientId\");\n  if (actionType === \"delete\") {\n    await prisma.client.delete({\n      where: {\n        id: clientId\n      } // \u05E9\u05D9\u05E0\u05D5\u05D9 \u05DC- String\n    });\n  } else if (actionType === \"edit\") {\n    const name = formData.get(\"name\");\n    const email = formData.get(\"email\");\n    const phone = formData.get(\"phone\");\n    const pets = formData.get(\"pets\").split(\",\");\n    await prisma.client.update({\n      where: {\n        id: clientId\n      },\n      // \u05E9\u05D9\u05E0\u05D5\u05D9 \u05DC- String\n      data: {\n        name,\n        email,\n        phone,\n        pets\n      }\n    });\n  }\n  return redirect(\"/display\");\n};\nexport default function Clients() {\n  _s();\n  const clients = useLoaderData();\n  const handleEdit = client => {\n    const name = prompt(\"\u05E9\u05DD:\", client.name);\n    const email = prompt(\"\u05D0\u05D9\u05DE\u05D9\u05D9\u05DC:\", client.email);\n    const phone = prompt(\"\u05D8\u05DC\u05E4\u05D5\u05DF:\", client.phone);\n    const pets = prompt(\"\u05D7\u05D9\u05D5\u05EA \u05DE\u05D7\u05DE\u05D3 (\u05DE\u05D5\u05E4\u05E8\u05D3\u05D5\u05EA \u05D1\u05E4\u05E1\u05D9\u05E7\u05D9\u05DD):\", client.pets.join(\", \"));\n    if (name && email && phone && pets !== null) {\n      const form = document.createElement(\"form\");\n      form.method = \"post\";\n      form.appendChild(createHiddenInput(\"clientId\", client.id)); // client.id \u05DB- String\n      form.appendChild(createHiddenInput(\"actionType\", \"edit\"));\n      form.appendChild(createHiddenInput(\"name\", name));\n      form.appendChild(createHiddenInput(\"email\", email));\n      form.appendChild(createHiddenInput(\"phone\", phone));\n      form.appendChild(createHiddenInput(\"pets\", pets));\n      document.body.appendChild(form);\n      form.submit();\n    }\n  };\n  const createHiddenInput = (name, value) => {\n    const input = document.createElement(\"input\");\n    input.type = \"hidden\";\n    input.name = name;\n    input.value = value;\n    return input;\n  };\n  return <div className=\"min-h-screen flex items-center justify-center bg-gradient-to-br from-blue-200 to-green-200\">\n      <div className=\"p-8 bg-white rounded-lg shadow-md w-full max-w-4xl\">\n        <h2 className=\"text-2xl font-semibold mb-4\">\u05E8\u05E9\u05D9\u05DE\u05EA \u05DC\u05E7\u05D5\u05D7\u05D5\u05EA</h2>\n        {clients.length === 0 ? <p className=\"text-gray-700\">\u05DC\u05D0 \u05E0\u05DE\u05E6\u05D0\u05D5 \u05DC\u05E7\u05D5\u05D7\u05D5\u05EA.</p> : <table className=\"min-w-full leading-normal\">\n            <thead>\n              <tr>\n                <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">\n                  \u05E9\u05DD\n                </th>\n                <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">\n                  \u05D0\u05D9\u05DE\u05D9\u05D9\u05DC\n                </th>\n                <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">\n                  \u05D8\u05DC\u05E4\u05D5\u05DF\n                </th>\n                <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">\n                  \u05D7\u05D9\u05D5\u05EA \u05DE\u05D7\u05DE\u05D3\n                </th>\n                <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">\n                  \u05E4\u05E2\u05D5\u05DC\u05D5\u05EA\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {clients.map(client => <tr key={client.id}>\n                  <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n                    {client.name}\n                  </td>\n                  <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n                    {client.email}\n                  </td>\n                  <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n                    {client.phone}\n                  </td>\n                  <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n                    {client.pets.join(\", \")}\n                  </td>\n                  <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n                    <Form method=\"post\" className=\"inline-block\">\n                      <input type=\"hidden\" name=\"clientId\" value={client.id} /> {/* client.id \u05DB- String */}\n                      <input type=\"hidden\" name=\"actionType\" value=\"delete\" />\n                      <button type=\"submit\" className=\"text-red-600 hover:text-red-900\">\n                        \u05DE\u05D7\u05D9\u05E7\u05D4\n                      </button>\n                    </Form>\n                    <button type=\"button\" className=\"text-blue-600 hover:text-blue-900 ml-4\" onClick={() => handleEdit(client)}>\n                      \u05E2\u05E8\u05D9\u05DB\u05D4\n                    </button>\n                  </td>\n                </tr>)}\n            </tbody>\n          </table>}\n      </div>\n    </div>;\n}\n_s(Clients, \"2kLGk52kIvWAhx8hm7FnvmTorKs=\", false, function () {\n  return [useLoaderData];\n});\n_c = Clients;\nvar _c;\n$RefreshReg$(_c, \"Clients\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": []
}
