{
  "version": 3,
  "sources": ["../../../app/routes/add/index.jsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/add/index.jsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/add/index.jsx\");\n  import.meta.hot.lastModified = \"1715961128547.611\";\n}\n// REMIX HMR END\n\n// routes/add-client.jsx\n\nimport { Form, useActionData, redirect } from \"@remix-run/react\";\nimport { json } from \"@remix-run/node\";\nimport { PrismaClient } from \"@prisma/client\";\nconst prisma = new PrismaClient();\nexport const action = async ({\n  request\n}) => {\n  if (request.method !== \"POST\") {\n    return json({\n      error: \"Method Not Allowed\"\n    }, {\n      status: 405\n    });\n  }\n  const formData = await request.formData();\n  const name = formData.get(\"name\");\n  const email = formData.get(\"email\");\n  const phone = formData.get(\"phone\");\n  const pets = formData.get(\"pets\").split(\",\");\n\n  // Debugging logs\n  console.log(\"Received data:\", {\n    name,\n    email,\n    phone,\n    pets\n  });\n\n  // Basic validation\n  if (typeof name !== \"string\" || typeof email !== \"string\" || typeof phone !== \"string\" || !Array.isArray(pets)) {\n    return json({\n      errors: {\n        message: \"Invalid input\"\n      }\n    }, {\n      status: 400\n    });\n  }\n  try {\n    await prisma.client.create({\n      data: {\n        name,\n        email,\n        phone,\n        pets\n      }\n    });\n    return redirect(\"/display\");\n  } catch (error) {\n    // Log the error for debugging\n    console.error(\"Error creating client:\", error);\n    let errorMessage = \"An error occurred.\";\n    if (error.code === \"P2002\" && error.meta.target.includes(\"email\")) {\n      errorMessage = \"Email must be unique.\";\n    }\n    return json({\n      errors: {\n        email: errorMessage\n      }\n    }, {\n      status: 400\n    });\n  }\n};\nexport default function AddClient() {\n  _s();\n  const actionData = useActionData();\n  const errors = actionData?.errors || {};\n  return <div className=\"min-h-screen flex items-center justify-center bg-gradient-to-br from-blue-200 to-green-200\">\n      <Form method=\"post\" className=\"p-8 bg-white rounded-lg shadow-md w-full max-w-md\">\n        <h2 className=\"text-2xl font-semibold mb-4\">Add New Client</h2>\n        <div className=\"mb-4\">\n          <label htmlFor=\"name\" className=\"block text-gray-700 font-bold mb-2\">Name:</label>\n          <input type=\"text\" id=\"name\" name=\"name\" className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" required />\n          {errors.name && <p className=\"text-red-500 text-xs italic\">{errors.name}</p>}\n        </div>\n        <div className=\"mb-4\">\n          <label htmlFor=\"email\" className=\"block text-gray-700 font-bold mb-2\">Email:</label>\n          <input type=\"email\" id=\"email\" name=\"email\" className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" required />\n          {errors.email && <p className=\"text-red-500 text-xs italic\">{errors.email}</p>}\n        </div>\n        <div className=\"mb-4\">\n          <label htmlFor=\"phone\" className=\"block text-gray-700 font-bold mb-2\">Phone:</label>\n          <input type=\"text\" id=\"phone\" name=\"phone\" className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" required />\n          {errors.phone && <p className=\"text-red-500 text-xs italic\">{errors.phone}</p>}\n        </div>\n        <div className=\"mb-6\">\n          <label htmlFor=\"pets\" className=\"block text-gray-700 font-bold mb-2\">Pets (comma-separated):</label>\n          <input type=\"text\" id=\"pets\" name=\"pets\" className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" required />\n        </div>\n        <div className=\"flex items-center justify-between\">\n          <button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\" type=\"submit\">\n            Add Client\n          </button>\n        </div>\n      </Form>\n    </div>;\n}\n_s(AddClient, \"fHVw5pq0Zwd2gXh2gyrnVdHnLCc=\", false, function () {\n  return [useActionData];\n});\n_c = AddClient;\nvar _c;\n$RefreshReg$(_c, \"AddClient\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": []
}
